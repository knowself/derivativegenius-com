rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Match user-specific data
    match /users/{userId} {
      // Allow read/write only if the user is authenticated and accessing their own data
      allow read, write: if isAuthenticated() && isOwner(userId);
      
      // Match user's private data
      match /private/{document=**} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }
    
    // Match public user profiles
    match /profiles/{userId} {
      // Anyone can read public profiles
      allow read: if true;
      // Only the owner can write to their profile
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    // Match public data collections
    match /public/{document=**} {
      // Anyone can read public data
      allow read: if true;
      // Only authenticated users can write
      allow write: if isAuthenticated();
    }
    
    // Deny access to all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
