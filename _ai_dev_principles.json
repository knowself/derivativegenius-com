{
  "core_principles": {
    "code_quality": {
      "mindset": "elite_software_engineer",
      "primary_goals": [
        "clean_code",
        "effective_solutions",
        "professional_grade",
        "future_ready"
      ],
      "coding_standards": {
        "clarity": {
          "requirements": [
            "clear_purpose_per_line",
            "descriptive_naming",
            "meaningful_comments",
            "purpose_explanation"
          ]
        },
        "best_practices": {
          "principles": [
            "SOLID",
            "DRY",
            "KISS"
          ]
        }
      }
    },
    "resilience": {
      "principles": [
        "data_persistence_first",
        "graceful_degradation",
        "transparent_user_feedback",
        "system_status_tracking",
        "comprehensive_logging"
      ],
      "implementation": {
        "data_flow": {
          "requirements": [
            "save_core_data_first",
            "auxiliary_operations_after_data_secured",
            "track_operation_status"
          ]
        },
        "error_handling": {
          "requirements": [
            "proper_error_boundaries",
            "appropriate_error_levels",
            "meaningful_user_messages",
            "detailed_error_logging"
          ]
        },
        "status_tracking": {
          "requirements": [
            "component_status_flags",
            "operation_timestamps",
            "system_state_auditing"
          ]
        },
        "user_communication": {
          "requirements": [
            "clear_status_feedback",
            "explain_reduced_functionality",
            "provide_alternative_actions"
          ]
        }
      },
      "example_implementations": {
        "contact_form": {
          "operations": [
            "primary_data_storage",
            "secondary_email_notifications",
            "fallback_behavior",
            "user_feedback",
            "operation_monitoring"
          ],
          "guarantees": [
            "no_data_loss",
            "appropriate_feedback",
            "status_tracking",
            "graceful_degradation",
            "clear_recovery_paths"
          ]
        }
      }
    },
    "security": {
      "principles": [
        "zero_trust",
        "least_privilege",
        "defense_in_depth"
      ],
      "implementation": {
        "secrets_management": {
          "tool": "Firebase Functions v2 Secrets",
          "requirements": [
            "use_defineSecret_for_sensitive_data",
            "no_environment_variables_for_secrets",
            "function_level_secret_access"
          ]
        },
        "firebase_functions": {
          "version": "v2",
          "security_practices": [
            "use_secret_manager_exclusively",
            "implement_proper_service_account_roles",
            "maintain_separate_dev_prod_secrets"
          ],
          "service_account": {
            "required_roles": [
              "Secret Manager Secret Accessor",
              "Cloud Functions Invoker"
            ],
            "permission_model": "least_privilege_access"
          },
          "secret_handling": {
            "principles": [
              "version_controlled_secrets",
              "function_scoped_access",
              "rotation_strategy"
            ],
            "implementation": {
              "secret_definition": "use_defineSecret_with_version",
              "access_pattern": "value_method_only",
              "error_handling": "graceful_fallback_with_logging"
            }
          },
          "environment_separation": {
            "development": {
              "principles": [
                "local_secret_mocking",
                "emulator_suite_usage",
                "detailed_error_logging"
              ]
            },
            "production": {
              "principles": [
                "strict_secret_access",
                "minimal_error_exposure",
                "audit_logging"
              ]
            }
          }
        }
      }
    }
  },
  "environment_configuration": {
    "local_development": {
      "python_version": "3.8",
      "node_version": "18.x",
      "package_management": {
        "python": {
          "virtual_env": "venv",
          "requirements": "requirements.txt",
          "auto_update": true
        },
        "node": "package.json"
      },
      "servers": {
        "management": {
          "tool": "devs.sh",
          "required": true,
          "description": "Primary tool for managing all development servers and environments",
          "log_management": {
            "strategy": "tool_permission_override",
            "implementation": {
              "log_dir": "dev_logs",
              "gitignore": true,
              "ai_tool_access": {
                "method": "direct_gitignore_access",
                "rationale": "Allow AI tools to read .gitignored files for debugging while keeping logs out of git history",
                "security_note": "Logs remain private as they never enter git history"
              }
            }
          }
        },
        "fastapi": {
          "command": "uvicorn main:app --reload",
          "port": 8000,
          "health_check": "/health"
        },
        "vue": {
          "command": "npm run serve",
          "port": 8080,
          "webpack_config": true
        }
      }
    },
    "production": {
      "hosting": {
        "frontend": "vercel",
        "api": "vercel",
        "long_running_jobs": "cloud_run"
      },
      "python_version": "3.8",
      "node_version": "18.x",
      "package_management": {
        "python": "requirements.txt",
        "node": "package.json (dependencies only)"
      }
    }
  },
  "architecture": {
    "backend": {
      "framework": "fastapi",
      "async_tasks": {
        "handler": "cloud_run",
        "queue": "cloud_tasks",
        "monitoring": "cloud_monitoring"
      },
      "health_checks": {
        "endpoints": ["/health/"],
        "components": [
          "fastapi",
          "firebase",
          "cloud_run_jobs",
          "celery_worker",
          "celery_beat"
        ]
      }
    },
    "frontend": {
      "framework": "vue",
      "development": {
        "webpack": {
          "hot_reload": true,
          "progress_tracking": true,
          "error_reporting": true
        }
      }
    },
    "firebase": {
      "mode": "cloud_only",
      "implementation": "admin_sdk",
      "client_sdk_forbidden": true,
      "dependencies": {
        "required": ["firebase-admin"],
        "forbidden": ["@firebase/app", "@firebase/auth", "firebase", "firebase-functions"]
      }
    }
  },
  "frameworks": {
    "backend": {
      "firebase_functions": {
        "version": "v2",
        "key_features": [
          "Enhanced secrets management with defineSecret",
          "Type-safe configuration parameters",
          "Function-level resource configuration",
          "Improved security features"
        ],
        "best_practices": [
          "Use specific imports from firebase-functions/v2",
          "Configure secrets at function level",
          "Implement proper error handling",
          "Verify service connections"
        ]
      }
    }
  },
  "development_workflow": {
    "startup_sequence": [
      "virtual_env_activation",
      "dependency_check",
      "fastapi_server",
      "vue_server"
    ],
    "health_monitoring": {
      "interval": "continuous",
      "components": [
        "fastapi_server",
        "vue_server"
      ]
    },
    "logging": {
      "files": {
        "fastapi": "fastapi.log",
        "vue": "vue.log"
      },
      "levels": [
        "error",
        "warning",
        "info",
        "debug"
      ]
    }
  },
  "testing": {
    "components": {
      "fastapi": {
        "command": "pytest",
        "coverage": true,
        "parallel": true
      },
      "firebase": {
        "connection_test": true,
        "admin_sdk_test": true
      }
    }
  }
}
