 
 -------------- celery@knowself-prime v5.3.6 (emerald-rush)
--- ***** ----- 
-- ******* ---- Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.29 2024-11-30 02:32:40
- *** --- * --- 
- ** ---------- [config]
- ** ---------- .> app:         api:0x7f741f6acf10
- ** ---------- .> transport:   redis://localhost:6379/0
- ** ---------- .> results:     
- *** --- * --- .> concurrency: 6 (prefork)
-- ******* ---- .> task events: ON
--- ***** ----- 
 -------------- [queues]
                .> celery           exchange=celery(direct) key=celery
                

[tasks]
  . api.celery.debug_task
  . core.tasks.process_ai_request
  . core.tasks.send_notification
  . core.tasks.test_celery_task

[2024-11-30 02:32:41,454: WARNING/MainProcess] /home/knowself/Web Dev/derivativegenius-com/dev/venv/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:507: CPendingDeprecationWarning: The broker_connection_retry configuration setting will no longer determine
whether broker connection retries are made during startup in Celery 6.0 and above.
If you wish to retain the existing behavior for retrying connections on startup,
you should set broker_connection_retry_on_startup to True.
  warnings.warn(

[2024-11-30 02:32:41,487: INFO/MainProcess] Connected to redis://localhost:6379/0
[2024-11-30 02:32:41,489: WARNING/MainProcess] /home/knowself/Web Dev/derivativegenius-com/dev/venv/lib/python3.8/site-packages/celery/worker/consumer/consumer.py:507: CPendingDeprecationWarning: The broker_connection_retry configuration setting will no longer determine
whether broker connection retries are made during startup in Celery 6.0 and above.
If you wish to retain the existing behavior for retrying connections on startup,
you should set broker_connection_retry_on_startup to True.
  warnings.warn(

[2024-11-30 02:32:41,498: INFO/MainProcess] mingle: searching for neighbors
[2024-11-30 02:32:42,513: INFO/MainProcess] mingle: all alone
[2024-11-30 02:32:42,539: INFO/MainProcess] celery@knowself-prime ready.

worker: Hitting Ctrl+C again will terminate all running tasks!

worker: Warm shutdown (MainProcess)

worker: Warm shutdown (MainProcess)
